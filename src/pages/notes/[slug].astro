---
import { getCollection, type CollectionEntry } from "astro:content";

import BaseLayout from "@layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const notes = await getCollection("notes");
  return notes.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

export interface Props {
  entry: CollectionEntry<"notes">;
}

const { entry } = Astro.props;
const { title, description } = entry.data;
const { Content } = await entry.render();
---

<BaseLayout title={title} description={description} type="article">
  <article class="prose max-w-none prose-inline-code:rounded prose-inline-code:border prose-inline-code:bg-background">
    <h1>{title}</h1>
    <Content />
  </article>
</BaseLayout>

<script>
  import mermaid from "mermaid";

  mermaid.initialize({
    startOnLoad: false,
    theme: "dark",
    fontFamily: "inherit",
  });

  document.querySelectorAll('pre[data-language="mermaid"]').forEach((node, index) => {
    const mermaidText = node.querySelector("code")?.innerText;
    if (!mermaidText) {
      return;
    }

    mermaid.render(`graph-div-${index}`, mermaidText).then(({ svg }) => {
      const container = document.createElement("div");
      container.style.display = "flex";
      container.style.justifyContent = "center";
      container.innerHTML = svg;

      node.innerHTML = "";
      node.appendChild(container);
    });
  });
</script>
