---
import { LONG_MONTH_DATE_FORMATTER } from "@lib/datetimes";
import type { Commit } from "@lib/remark-git-log";

const OWNER = "piero-vic";
const REPO = "pierolescano.com";

export interface Props {
  commits?: Commit[];
}

const { commits = [] } = Astro.props;

const firstCommit = commits.length > 0 ? commits[commits.length - 1] : null;
const lastCommit = commits.length > 0 ? commits[0] : null;
const hasBeenUpdated = firstCommit?.hash !== lastCommit?.hash;
---

{
  firstCommit != null && (
    <p class="text-sm">
      Published:
      <time class="italic" datetime={firstCommit.date}>
        {LONG_MONTH_DATE_FORMATTER.format(new Date(firstCommit.date))}
      </time>
      in
      <a class="text-blue underline" href={`https://github.com/${OWNER}/${REPO}/commit/${firstCommit.hash}`}>
        {firstCommit.hash.substring(0, 7)}
      </a>
    </p>
  )
}

{
  lastCommit != null && hasBeenUpdated && (
    <p class="text-sm">
      Updated:
      <time class="italic" datetime={lastCommit.date}>
        {LONG_MONTH_DATE_FORMATTER.format(new Date(lastCommit.date))}
      </time>
      in
      <a class="text-blue underline" href={`https://github.com/${OWNER}/${REPO}/commit/${lastCommit.hash}`}>
        {lastCommit.hash.substring(0, 7)}
      </a>
    </p>
  )
}
