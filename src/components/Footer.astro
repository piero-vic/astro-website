---
import { Icon } from "astro-icon";

const contactLinks = [
  { name: "Github", icon: "prime:github", link: "https://github.com/piero-vic" },
  { name: "LinkedIn", icon: "prime:linkedin", link: "https://www.linkedin.com/in/piero-lescano" },
  { name: "Email", icon: "ph:envelope-simple-fill", link: "mailto:pierolescano@protonmail.com" },
];
---

<footer class="px-5vw py-6 text-xs md:py-8">
  <div class="mx-auto flex max-w-7xl flex-col items-center justify-between gap-2 xl:flex-row">
    <ul class="flex gap-2">
      {
        contactLinks.map(item => (
          <li class="h-6 w-6 transition hover:text-blue xl:h-7 xl:w-7">
            <a href={item.link}>
              <Icon name={item.icon} aria-hidden="true" focusable="false" />
              <span class="sr-only">{item.name}</span>
            </a>
          </li>
        ))
      }
    </ul>

    <div class="flex flex-col flex-wrap items-center gap-2 xl:items-end">
      <div class="flex items-center gap-2 font-bold">
        <Icon name="ph:copyright-bold" class="h-3 w-3" />
        Copyright 2021-2023 Piero Lescano
      </div>

      <span>
        Build with <a class="font-bold text-red hover:underline" href="https://astro.build/">Astro</a>
        and <a class="font-bold text-blue hover:underline" href="https://tailwindcss.com/">TailwindCSS</a>
      </span>

      <div class="flex items-center gap-2">
        <Icon name="bi:spotify" class="h-4 w-4 text-green" />
        <p id="current-track">
          <span class="font-bold">Not Playing</span> - <span>Spotify</span>
        </p>
      </div>
    </div>
  </div>
</footer>

<script>
  window.addEventListener("DOMContentLoaded", async () => {
    const CACHE_TIMEOUT = 50000;
    const API_CALL_INTERVAL = 10000;

    const get = async (url: string) => {
      const now = new Date().getTime();

      const savedJson = window.localStorage.getItem(url);

      if (savedJson !== null) {
        const prevResp = JSON.parse(savedJson);

        if (prevResp && Math.abs(now - prevResp.time) < CACHE_TIMEOUT) {
          return prevResp.data;
        }
      }

      const resp = await fetch(url);
      const json = await resp.json();
      window.localStorage.setItem(url, JSON.stringify({ time: now, data: json }));
      return json;
    };

    const setCurrentTrack = async () => {
      const currentTrack = await get("/api/current-track");
      const currentTrackContainer = document.getElementById("current-track");

      if (currentTrackContainer !== null) {
        currentTrackContainer.innerHTML = currentTrack.isPlaying
          ? `<a class="font-bold text-green hover:underline" href="${currentTrack.songUrl}">${currentTrack.name}</a> - <span>${currentTrack.artist}</span>`
          : `<span class="font-bold">Not Playing</span> - <span>Spotify</span>`;
      }
    };

    await setCurrentTrack();

    window.setInterval(setCurrentTrack, API_CALL_INTERVAL);
  });
</script>
